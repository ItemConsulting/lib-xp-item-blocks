.content-grid {
  --content-grid--padding-inline: var(--blocks-spacing-md);
  --content-grid--full: minmax(var(--content-grid--padding-inline), 1fr);
  --content-grid--content: min(var(--blocks-container-sm), 100% - var(--content-grid--padding-inline) * 2);
  --content-grid--breakout: minmax(0, calc((var(--blocks-container-md) - var(--blocks-container-sm)) / 2));
  --content-grid--feature: minmax(0, calc((var(--blocks-container-lg) - var(--blocks-container-md)) / 2));

  display: grid;
  grid-template-columns:
    [full-start] var(--content-grid--full)
    [feature-start] var(--content-grid--feature)
    [breakout-start] var(--content-grid--breakout)
    [content-start] var(--content-grid--content) [content-end]
    var(--content-grid--breakout) [breakout-end]
    var(--content-grid--feature) [feature-end]
    var(--content-grid--full) [full-end];
  row-gap: var(--content-grid--row-gap, var(--blocks-spacing-lg));

  /* Don't double padding on nested content grids */

  .content-grid {
    --content-grid--padding-inline: 0;
  }
}

.content-grid > * {
  grid-column: var(--content-grid-grid-column, content);
}

.content-grid--content {
  --content-grid-grid-column: content;
}

.content-grid--breakout {
  --content-grid-grid-column: breakout;
}

.content-grid--feature {
  --content-grid-grid-column: feature;
}

.content-grid--full {
  --content-grid-grid-column: full;
}
